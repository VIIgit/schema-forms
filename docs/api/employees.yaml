openapi: 3.0.0
info:
  title: employees
  version: '1.0.0-SNAPSHOT'
  description: |
    https://spring.io/blog/2018/01/12/building-richer-hypermedia-with-spring-hateoas
tags:
  - name: default
    description: ""
servers:
  - url: 'http://example.com:3000'
paths:
  /employees:
    get:
      summary: List of Employees
      responses:
        '200':
          description: OK
          headers:
            ETag:
              schema:
                type: string
                example: s8437b6154v76348
              description: To cache resources
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/prs.hal-forms+json; profile=schema:
              schema:
                allOf:
                - $ref: '#/components/schemas/Employee'
                - $ref: '#/components/schemas/EmployeeTemplates'
            application/schema+json:
              schema:
                type: object
              examples:
                Static cacheable schema:
                  description:
                    "Static localized JSON Schema   
                    
                    _Remark: Example Value displays also $$ref, which is just a side-effect _"
                  value:
                    allOf:
                    - $id: "http://example.com/api/employees"
                      $schema: "https://json-schema.org/draft/2019-09/schema"
                    - $ref: "#/components/schemas/Employee"
        
      operationId: get-employees
    post:
      summary: 'Register employee'
      operationId: post-employees
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
              
        description: ''
  '/employees/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Details of an Employee
      operationId: get-employees-id
      responses:
        '200':
          description: Created
    patch:
      summary: Update Employee
      operationId: patch-employees-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}

    delete:
      summary: Remove Employee
      operationId: delete-employees-id
      responses:
        '204':
          description: Deleted
components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          example: 1        
        firstName:
          type: string
          example: John
          minLength: 1
        lastName:
          type: string
          minLength: 1
        birthday:
          type: string
          format: date
          example: "2000-12-31"
        status:
          type: string
          enum:
          - ACTIVE
          - RESIGNED
        _links:
          type: object
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/EmployeeLink"
          - $ref: "#/components/schemas/LeavesCompany"

    EmployeeTemplates:
      type: object
      properties:
        _templates:
          type: object
          properties:
            default:
              type: object
              properties:
                title:
                  type: string
                  example: Employee
                method:
                  type: string
                  example: POST
                contentType: 
                  type: string
                  example: application/json
                jsonSchema:
                  type: object
                  example:
                    $id: "http://example.com/api/employees"
                    $schema: "https://json-schema.org/draft/2019-09/schema"
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1        
                      firstName:
                        type: string
                        example: John
                        minLength: 1
                      lastName:
                        type: string
                        example: Doe
                        minLength: 1
                      birthday:
                        type: string
                        format: date
                        example: 2000-12-31
                      status:
                        type: string
                        oneOf:
                        - const: ACTIVE
                          title: Aktiv
                        - const: RESIGNED
                          title: Gek√ºndigt
            deleteEmployee:
              type: object
              properties:
                method:
                  type: string
                  example: DELETE

    EmployeeLink:
      type: object
      required: 
      - self
      properties:
        self:
          type: object
          required: 
          - href
          properties:
            href:
              type: string
              example: 'http://example.com/employees/1'

    LeavesCompany:
      type: object
      properties:
        leavesCompany:
          type: object
          required:
          - href
          properties:
            href:
              type: string
              example: 'http://example.com/employees/1'
