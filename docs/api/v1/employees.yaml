openapi: 3.0.0
info:
  title: A HAL-Form extension with JSON Validation Schema
  version: '1.0.0-SNAPSHOT'
  description: |
    Examples described at [https://viigit.github.io/schema-forms](https://viigit.github.io/schema-forms/)
tags:
  - name: Collection Workflows
    description: "example workflow 1-5"
  - name: Resource Workflows
    description: "example workflow 6-8"
servers:
  - url: 'http://example.com/api/v1'
paths:
  /employees:
    get:
      summary: List of Employees
      operationId: get-employees
      tags:
      - Collection Workflows
      responses:
        '200':
          description: OK
          headers:
            ETag:
              schema:
                type: string
                example: s8437b6154v76348
              description: To cache resources
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employees'
            application/prs.hal-forms+json:
              schema:
                $ref: '#/components/schemas/EmployeesTemplates'
            application/schema+json:
              schema:
                $ref: '#/components/schemas/EmployeesJsonSchema'
    post:
      summary: 'Register employee'
      tags:
        - Collection Workflows
      operationId: post-employees
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
              
        description: ''
  '/employees/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Details of an Employee
      tags:
        - Resource Workflows
      operationId: get-employees-id
      responses:
        '200':
          description: Created
    patch:
      summary: Update Employee
      tags:
        - Resource Workflows
      operationId: patch-employees-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}

    delete:
      summary: Remove Employee
      tags:
        - Resource Workflows
      operationId: delete-employees-id
      responses:
        '204':
          description: Removed

components:

  schemas:

    Employees:
      allOf:
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              employees:
                type: array
                items:
                  $ref: "#/components/schemas/ExistingEmployee"
      - $ref: '#/components/schemas/EmployeesLinks'

    EmployeeId:
      type: object
      properties:
        id:
          type: integer
          example: 1        
    Employee:
      type: object
      properties:
        firstName:
          type: string
          example: John
          minLength: 1
        lastName:
          type: string
          minLength: 1
        birthday:
          type: string
          format: date
          example: "2000-12-31"
        email:
          type: string
          format: email
        status:
          type: string
          enum:
          - PART-TIME
          - PERMANENT
          - RESIGNED
    ExistingEmployee:
      allOf:
      - $ref: "#/components/schemas/EmployeeId"
      - $ref: "#/components/schemas/Employee"
      - $ref: "#/components/schemas/EmployeeLinks"


    EmployeeTemplates:
      type: object
      properties:
        _templates:
          type: object
          properties:
            default:
              type: object
              properties:
                title:
                  type: string
                  example: Employee
                method:
                  type: string
                  example: POST
                contentType: 
                  type: string
                  example: application/json
                jsonSchema:
                  type: object
                  example:
                    $id: "http://example.com/api/employees"
                    $schema: "https://json-schema.org/draft/2019-09/schema"
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1        
                      firstName:
                        type: string
                        example: John
                        minLength: 1
                      lastName:
                        type: string
                        example: Doe
                        minLength: 1
                      birthday:
                        type: string
                        format: date
                        example: 2000-12-31
                      email:
                        type: string
                        format: email
                        example: john.doe@example.com
                      status:
                        type: string
                        oneOf:
                        - const: PART-TIME
                          title: Teilzeit
                        - const: PERMANENT
                          title: Festangestellt
                        - const: RESIGNED
                          title: Gekündigt
            deleteEmployee:
              type: object
              properties:
                method:
                  type: string
                  example: DELETE

    EmployeesTemplates:
      allOf:
      - $ref: '#/components/schemas/Employees'
      - type: object
        properties:
          _templates:
            type: object
            properties:
              addEmployee:
                type: object
                properties:
                  title:
                    type: string
                    example: Add Employee
                  method:
                    type: string
                    example: POST
                  contentType: 
                    type: string
                    example: application/json
                  jsonSchema:
                    type: object
                    example:
                      $id: "http://example.com/api/employees"
                      $schema: "https://json-schema.org/draft/2019-09/schema"
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1        
                        firstName:
                          type: string
                          example: John
                          minLength: 1
                        lastName:
                          type: string
                          example: Doe
                          minLength: 1
                        birthday:
                          type: string
                          format: date
                          example: 2000-12-31
                        email:
                          type: string
                          format: email
                          example: john.doe@example.com
                        status:
                          type: string
                          oneOf:
                          - const: PART-TIME
                            title: Teilzeit
                          - const: PERMANENT
                            title: Festangestellt
                          - const: RESIGNED
                            title: Gekündigt


    EmployeeLinks:
      type: object
      properties:
        _links:
          type: object
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/EmployeeLink"
          - $ref: "#/components/schemas/LeavesCompany"

    EmployeeLink:
      type: object
      required: 
      - self
      properties:
        self:
          type: object
          required: 
          - href
          properties:
            href:
              type: string
              example: 'http://example.com/employees/1'

    EmployeesLinks:
      type: object
      properties:
        _links:
          type: object
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/EmployeesLink"
          
    EmployeesLink:
      type: object
      required: 
      - self
      properties:
        self:
          type: object
          required: 
          - href
          properties:
            href:
              type: string
              example: 'http://example.com/employees'
              
    LeavesCompany:
      type: object
      properties:
        leavesCompany:
          type: object
          required:
          - href
          properties:
            href:
              type: string
              example: 'http://example.com/employees/1'

    EmployeesSchema:
      allOf:
      - type: object
        properties:
          $id:
            type: string
            example: "http://example.com/api/employees"
          $schema:
            type: string
            example: "https://json-schema.org/draft/2019-09/schema"
      - $ref: "#/components/schemas/Employee"
      
    EmployeesJsonSchema:
      example:
        $id: "http://example.com/api/employees"
        $schema: "https://json-schema.org/draft/2019-09/schema"
        type: object
        properties:
          id:
            type: integer
            example: 1        
          firstName:
            type: string
            example: John
            minLength: 1
          lastName:
            type: string
            example: Doe
            minLength: 1
          birthday:
            type: string
            format: date
          email:
            type: string
            format: email
          status:
            type: string
            oneOf:
            - const: PART-TIME
              title: Teilzeit
            - const: PERMANENT
              title: Festangestellt
            - const: RESIGNED
              title: Gekündigt